"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var a=e(require("@plasmicapp/host/registerComponent")),t=e(require("react")),n=require("@rive-app/react-canvas"),i=require("@plasmicapp/host"),o=["layout","className","onStateChange","stateMachines"],s=t.forwardRef((function(e,a){var s=e.layout,p=e.className,r=e.onStateChange,l=e.stateMachines,m=function(e,a){if(null==e)return{};var t={};for(var n in e)if({}.hasOwnProperty.call(e,n)){if(-1!==a.indexOf(n))continue;t[n]=e[n]}return t}(e,o),c=i.usePlasmicCanvasContext(),u=s?new n.Layout({fit:s.fit,alignment:s.alignment,minX:s.minX,minY:s.minY,maxX:s.maxX,maxY:s.maxY}):void 0,d=t.useMemo((function(){return{src:m.src,artboard:m.artboard,animations:m.animations,stateMachines:l,layout:u,autoplay:c?m.studioAutoplay:m.autoplay,onStateChange:function(e){r&&r(e)}}}),[m.src,m.artboard,m.animations,m.autoplay,m.studioAutoplay,u,l,c,r]),y=n.useRive(d),h=y.rive,f=y.RiveComponent;function v(e,a,t,i){void 0===t&&(t=null),void 0===i&&(i=null),((null==h?void 0:h.stateMachineInputs(i||l))||[]).forEach((function(i){if(i.type!==e&&console.warn("PlasmicRive: Input type mismatch: expected "+e+", got "+i.type),i.name===a)switch(e){case n.StateMachineInputType.Trigger:i.fire();break;case n.StateMachineInputType.Number:case n.StateMachineInputType.Boolean:i.value=t}}))}t.useImperativeHandle(a,(function(){return{setBoolean:function(e,a,t){v(n.StateMachineInputType.Boolean,e,a,t)},setNumber:function(e,a,t){v(n.StateMachineInputType.Number,e,a,t)},fire:function(e,a){v(n.StateMachineInputType.Trigger,e,null,a)},play:function(e){null==h||h.play(e)},pause:function(e){null==h||h.pause(e)}}}),[h]);var N=t.useMemo((function(){return c?[m.src,m.artboard,m.animations,m.autoplay,m.studioAutoplay,JSON.stringify(s),l,Date.now()].join("|"):void 0}),[c,m.src,m.artboard,m.animations,m.autoplay,m.studioAutoplay,s,l]);return t.createElement(f,{className:p,key:N})})),p={name:"rive",displayName:"Rive",importName:"Rive",importPath:"@plasmicpkgs/plasmic-rive",description:"Rive animation component",props:{src:{type:"string",defaultValue:"https://cdn.rive.app/animations/vehicles.riv",displayName:"Source URL",description:"URL to the .riv file (exported from Rive)"},stateMachines:{type:"string",displayName:"State Machines",description:"(optional) Name of state machine to load.",advanced:!0},autoplay:{type:"boolean",displayName:"Autoplay",description:"Should animation play automatically.",defaultValue:!0,advanced:!0},studioAutoplay:{type:"boolean",displayName:"Studio Autoplay",description:"Should animation play automatically in Plasmic Studio.",defaultValue:!1,advanced:!0},artboard:{type:"string",displayName:"Artboard",description:"(optional) Name of the artboard to use.",advanced:!0},layout:{type:"object",displayName:"Layout",description:"(optional) Layout object to define how animations are displayed on the canvas.",advanced:!0,fields:{fit:{type:"choice",displayName:"Fit",options:["cover","contain","fill","fitWidth","fitHeight","none","scaleDown"],description:"How the animation should fit in the canvas."},alignment:{type:"choice",displayName:"Alignment",options:["center","topLeft","topCenter","topRight","centerLeft","centerRight","bottomLeft","bottomCenter","bottomRight"],description:"How the animation should be aligned in the canvas."},minX:{type:"number",displayName:"Min X",advanced:!0},minY:{type:"number",displayName:"Min Y",advanced:!0},maxX:{type:"number",displayName:"Max X",advanced:!0},maxY:{type:"number",displayName:"Max Y",advanced:!0}}},animations:{type:"string",displayName:"Animations",description:"(optional) Name or list of names of animations to play.",advanced:!0},onStateChange:{type:"eventHandler",displayName:"On State Change",description:"(optional) Callback when the state changes.",advanced:!0,argTypes:[{name:"event",type:"object"}]}},refActions:{setBoolean:{description:"Set the Rive Input",argTypes:[{name:"name",type:"string",displayName:"Input Name"},{name:"value",type:"boolean",displayName:"Input Value"},{name:"stateMachine",type:"string",displayName:"State Machine Name"}]},setNumber:{description:"Set the Rive Input",argTypes:[{name:"name",type:"string",displayName:"Input Name"},{name:"value",type:"number",displayName:"Input Value"},{name:"stateMachine",type:"string",displayName:"State Machine Name"}]},fire:{description:"Fire the Rive Input",argTypes:[{name:"name",type:"string",displayName:"Input Name"},{name:"stateMachine",type:"string",displayName:"State Machine Name"}]},play:{description:"Play the animation",argTypes:[{name:"animationName",type:"string",displayName:"Animation Name"}]},pause:{description:"Pause the animation",argTypes:[{name:"animationName",type:"string",displayName:"Animation Name"}]}}};exports.default=s,exports.registerPlasmicRive=function(e){e?e.registerComponent(s,p):a(s,p)},exports.riveMetaDescriptor=p;
//# sourceMappingURL=plasmic-rive.cjs.production.min.js.map
