/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: ooL7EhXDmFQWnW9sxtchhE
// Component: s87vSHZpzQ

import * as React from "react";

import {
  Flex as Flex__,
  Stack as Stack__,
  StrictProps,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  renderPlasmicSlot,
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";

import Modal from "../../components/Modal"; // plasmic-import: rD0wOVzSnE/component
import StarterGroup from "../../components/StarterGroup"; // plasmic-import: u6dq5eydCj/component
import StarterProject from "../../components/StarterProject"; // plasmic-import: CCsDeqqYeoM/component
import Button from "../../components/widgets/Button"; // plasmic-import: SEF-sRmSoqV5c/component

import { useEnvironment } from "../plasmic_kit_pricing/PlasmicGlobalVariant__Environment"; // plasmic-import: hIjF9NLAUKG-/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "../PP__plasmickit_dashboard.module.css"; // plasmic-import: ooL7EhXDmFQWnW9sxtchhE/projectcss
import sty from "./PlasmicNewProjectModal.module.css"; // plasmic-import: s87vSHZpzQ/css

import CheckIcon from "../plasmic_kit/PlasmicIcon__Check"; // plasmic-import: pawp1H5YxB_3B/icon
import eyeSvgZxKyHRa6Q6Pa from "../plasmic_kit_design_system/images/eyeSvg.svg"; // plasmic-import: Zx-kyHRa6Q6PA/picture
import image3YherfIxkolNxf from "../plasmic_kit_design_system/images/image3.svg"; // plasmic-import: yherfIxkolNXF/picture
import ArrowRightSvgIcon from "../plasmic_kit_icons/icons/PlasmicIcon__ArrowRightSvg"; // plasmic-import: 9Jv8jb253/icon
import ChevronDownSvgIcon from "../plasmic_kit_icons/icons/PlasmicIcon__ChevronDownSvg"; // plasmic-import: xZrB9_0ir/icon

createPlasmicElementProxy;

export type PlasmicNewProjectModal__VariantMembers = {};
export type PlasmicNewProjectModal__VariantsArgs = {};
type VariantPropType = keyof PlasmicNewProjectModal__VariantsArgs;
export const PlasmicNewProjectModal__VariantProps =
  new Array<VariantPropType>();

export type PlasmicNewProjectModal__ArgsType = { children?: React.ReactNode };
type ArgPropType = keyof PlasmicNewProjectModal__ArgsType;
export const PlasmicNewProjectModal__ArgProps = new Array<ArgPropType>(
  "children"
);

export type PlasmicNewProjectModal__OverridesType = {
  root?: Flex__<typeof Modal>;
  freeBox?: Flex__<"div">;
  cancelButton?: Flex__<typeof Button>;
  text?: Flex__<"div">;
};

export interface DefaultNewProjectModalProps {
  children?: React.ReactNode;
  className?: string;
}

const $$ = {};

function PlasmicNewProjectModal__RenderFunc(props: {
  variants: PlasmicNewProjectModal__VariantsArgs;
  args: PlasmicNewProjectModal__ArgsType;
  overrides: PlasmicNewProjectModal__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants,
  };

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = ensureGlobalVariants({
    environment: useEnvironment(),
  });

  return (
    <Modal
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames("__wab_instance", sty.root)}
      footer={
        <Button
          data-plasmic-name={"cancelButton"}
          data-plasmic-override={overrides.cancelButton}
          className={classNames("__wab_instance", sty.cancelButton)}
          endIcon={
            <ChevronDownSvgIcon
              className={classNames(projectcss.all, sty.svg__uqGta)}
              role={"img"}
            />
          }
          size={"wide"}
          startIcon={
            <ArrowRightSvgIcon
              className={classNames(projectcss.all, sty.svg__trEgf)}
              role={"img"}
            />
          }
          type={["clear"]}
        >
          <div
            data-plasmic-name={"text"}
            data-plasmic-override={overrides.text}
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text
            )}
          >
            {"Cancel"}
          </div>
        </Button>
      }
      tintBackground={true}
      title={"New Project"}
    >
      <Stack__
        as={"div"}
        data-plasmic-name={"freeBox"}
        data-plasmic-override={overrides.freeBox}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox)}
      >
        {renderPlasmicSlot({
          defaultContents: (
            <React.Fragment>
              <StarterGroup
                className={classNames(
                  "__wab_instance",
                  sty.starterGroup__krfRp
                )}
                container={
                  <React.Fragment>
                    <StarterProject
                      className={classNames(
                        "__wab_instance",
                        sty.starterProject__xQrks
                      )}
                      image={"withImage"}
                      instruction={"Click to duplicate this project"}
                      name={'Play "Plasmic Levels"'}
                      preview={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img__pgne4
                          )}
                          src={image3YherfIxkolNxf}
                        />
                      }
                      previewIcon={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img__fwvOk
                          )}
                          loading={"lazy"}
                          src={eyeSvgZxKyHRa6Q6Pa}
                        />
                      }
                      withDescrip={true}
                    >
                      <CheckIcon
                        className={classNames(projectcss.all, sty.svg___51Z9I)}
                        role={"img"}
                      />
                    </StarterProject>
                    <StarterProject
                      className={classNames(
                        "__wab_instance",
                        sty.starterProject__mLyWg
                      )}
                      image={"withImage"}
                      instruction={"Click to duplicate this project"}
                      name={'Play "Plasmic Levels"'}
                      preview={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img__bRo9U
                          )}
                          src={image3YherfIxkolNxf}
                        />
                      }
                      previewIcon={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img__dtEk7
                          )}
                          loading={"lazy"}
                          src={eyeSvgZxKyHRa6Q6Pa}
                        />
                      }
                    >
                      <CheckIcon
                        className={classNames(projectcss.all, sty.svg__xCbYe)}
                        role={"img"}
                      />
                    </StarterProject>
                    <StarterProject
                      className={classNames(
                        "__wab_instance",
                        sty.starterProject__t85EI
                      )}
                      image={"withImage"}
                      instruction={"Click to duplicate this project"}
                      name={'Play "Plasmic Levels"'}
                      preview={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img___7SyGv
                          )}
                          src={image3YherfIxkolNxf}
                        />
                      }
                      previewIcon={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img__cx8F
                          )}
                          loading={"lazy"}
                          src={eyeSvgZxKyHRa6Q6Pa}
                        />
                      }
                    >
                      <CheckIcon
                        className={classNames(projectcss.all, sty.svg__sJyVa)}
                        role={"img"}
                      />
                    </StarterProject>
                    <StarterProject
                      className={classNames(
                        "__wab_instance",
                        sty.starterProject___7HRnI
                      )}
                      image={"withImage"}
                      instruction={"Click to duplicate this project"}
                      name={'Play "Plasmic Levels"'}
                      preview={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img__d0J3B
                          )}
                          src={image3YherfIxkolNxf}
                        />
                      }
                      previewIcon={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img__euz0C
                          )}
                          loading={"lazy"}
                          src={eyeSvgZxKyHRa6Q6Pa}
                        />
                      }
                    >
                      <CheckIcon
                        className={classNames(projectcss.all, sty.svg__ca4Uy)}
                        role={"img"}
                      />
                    </StarterProject>
                  </React.Fragment>
                }
                heading={"Subheading"}
              />

              <StarterGroup
                className={classNames(
                  "__wab_instance",
                  sty.starterGroup___528VM
                )}
                container={
                  <React.Fragment>
                    <StarterProject
                      className={classNames(
                        "__wab_instance",
                        sty.starterProject__sbDnI
                      )}
                      image={"withImage"}
                      instruction={"Click to duplicate this project"}
                      name={'Play "Plasmic Levels"'}
                      preview={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img__hT9Mo
                          )}
                          src={image3YherfIxkolNxf}
                        />
                      }
                      previewIcon={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img__sDgWf
                          )}
                          loading={"lazy"}
                          src={eyeSvgZxKyHRa6Q6Pa}
                        />
                      }
                    >
                      <CheckIcon
                        className={classNames(projectcss.all, sty.svg__nrPcn)}
                        role={"img"}
                      />
                    </StarterProject>
                    <StarterProject
                      className={classNames(
                        "__wab_instance",
                        sty.starterProject__oCAcA
                      )}
                      image={"withImage"}
                      instruction={"Click to duplicate this project"}
                      name={'Play "Plasmic Levels"'}
                      preview={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img__uwg1C
                          )}
                          src={image3YherfIxkolNxf}
                        />
                      }
                      previewIcon={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img__lfZxl
                          )}
                          loading={"lazy"}
                          src={eyeSvgZxKyHRa6Q6Pa}
                        />
                      }
                    >
                      <CheckIcon
                        className={classNames(projectcss.all, sty.svg___7Jzx0)}
                        role={"img"}
                      />
                    </StarterProject>
                    <StarterProject
                      className={classNames(
                        "__wab_instance",
                        sty.starterProject___3RF
                      )}
                      image={"withImage"}
                      instruction={"Click to duplicate this project"}
                      name={'Play "Plasmic Levels"'}
                      preview={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img__pVq7
                          )}
                          src={image3YherfIxkolNxf}
                        />
                      }
                      previewIcon={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img__tcYhV
                          )}
                          loading={"lazy"}
                          src={eyeSvgZxKyHRa6Q6Pa}
                        />
                      }
                    >
                      <CheckIcon
                        className={classNames(projectcss.all, sty.svg__hVww)}
                        role={"img"}
                      />
                    </StarterProject>
                    <StarterProject
                      className={classNames(
                        "__wab_instance",
                        sty.starterProject__aVc4Q
                      )}
                      image={"withImage"}
                      instruction={"Click to duplicate this project"}
                      name={'Play "Plasmic Levels"'}
                      preview={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img__hRe87
                          )}
                          src={image3YherfIxkolNxf}
                        />
                      }
                      previewIcon={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img__eYdKv
                          )}
                          loading={"lazy"}
                          src={eyeSvgZxKyHRa6Q6Pa}
                        />
                      }
                    >
                      <CheckIcon
                        className={classNames(projectcss.all, sty.svg__onpnI)}
                        role={"img"}
                      />
                    </StarterProject>
                  </React.Fragment>
                }
                heading={"Subheading"}
              />

              <StarterGroup
                className={classNames(
                  "__wab_instance",
                  sty.starterGroup__fdPqi
                )}
                container={
                  <React.Fragment>
                    <StarterProject
                      className={classNames(
                        "__wab_instance",
                        sty.starterProject__bQnRm
                      )}
                      image={"withImage"}
                      instruction={"Click to duplicate this project"}
                      name={'Play "Plasmic Levels"'}
                      preview={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img__s0Rca
                          )}
                          src={image3YherfIxkolNxf}
                        />
                      }
                      previewIcon={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img__jk8H
                          )}
                          loading={"lazy"}
                          src={eyeSvgZxKyHRa6Q6Pa}
                        />
                      }
                    >
                      <CheckIcon
                        className={classNames(projectcss.all, sty.svg__wqVlD)}
                        role={"img"}
                      />
                    </StarterProject>
                    <StarterProject
                      className={classNames(
                        "__wab_instance",
                        sty.starterProject__e7Lml
                      )}
                      image={"withImage"}
                      instruction={"Click to duplicate this project"}
                      name={'Play "Plasmic Levels"'}
                      preview={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img__pRlIb
                          )}
                          src={image3YherfIxkolNxf}
                        />
                      }
                      previewIcon={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img__rVwBb
                          )}
                          loading={"lazy"}
                          src={eyeSvgZxKyHRa6Q6Pa}
                        />
                      }
                    >
                      <CheckIcon
                        className={classNames(projectcss.all, sty.svg__huUsm)}
                        role={"img"}
                      />
                    </StarterProject>
                    <StarterProject
                      className={classNames(
                        "__wab_instance",
                        sty.starterProject__eoRbz
                      )}
                      image={"withImage"}
                      instruction={"Click to duplicate this project"}
                      name={'Play "Plasmic Levels"'}
                      preview={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img__b27Fl
                          )}
                          src={image3YherfIxkolNxf}
                        />
                      }
                      previewIcon={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img__h16Z
                          )}
                          loading={"lazy"}
                          src={eyeSvgZxKyHRa6Q6Pa}
                        />
                      }
                    >
                      <CheckIcon
                        className={classNames(projectcss.all, sty.svg___05KJ9)}
                        role={"img"}
                      />
                    </StarterProject>
                    <StarterProject
                      className={classNames(
                        "__wab_instance",
                        sty.starterProject__v72Qz
                      )}
                      image={"withImage"}
                      instruction={"Click to duplicate this project"}
                      name={'Play "Plasmic Levels"'}
                      preview={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img__qDVqU
                          )}
                          src={image3YherfIxkolNxf}
                        />
                      }
                      previewIcon={
                        <img
                          alt={""}
                          className={classNames(
                            projectcss.all,
                            projectcss.img,
                            sty.img__uu28E
                          )}
                          loading={"lazy"}
                          src={eyeSvgZxKyHRa6Q6Pa}
                        />
                      }
                    >
                      <CheckIcon
                        className={classNames(projectcss.all, sty.svg__wvMj9)}
                        role={"img"}
                      />
                    </StarterProject>
                  </React.Fragment>
                }
                heading={"Subheading"}
              />
            </React.Fragment>
          ),
          value: args.children,
        })}
      </Stack__>
    </Modal>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "freeBox", "cancelButton", "text"],
  freeBox: ["freeBox"],
  cancelButton: ["cancelButton", "text"],
  text: ["text"],
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: typeof Modal;
  freeBox: "div";
  cancelButton: typeof Button;
  text: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicNewProjectModal__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicNewProjectModal__VariantsArgs;
    args?: PlasmicNewProjectModal__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicNewProjectModal__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicNewProjectModal__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicNewProjectModal__ArgProps,
          internalVariantPropNames: PlasmicNewProjectModal__VariantProps,
        }),
      [props, nodeName]
    );
    return PlasmicNewProjectModal__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName,
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicNewProjectModal";
  } else {
    func.displayName = `PlasmicNewProjectModal.${nodeName}`;
  }
  return func;
}

export const PlasmicNewProjectModal = Object.assign(
  // Top-level PlasmicNewProjectModal renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    freeBox: makeNodeComponent("freeBox"),
    cancelButton: makeNodeComponent("cancelButton"),
    text: makeNodeComponent("text"),

    // Metadata about props expected for PlasmicNewProjectModal
    internalVariantProps: PlasmicNewProjectModal__VariantProps,
    internalArgProps: PlasmicNewProjectModal__ArgProps,
  }
);

export default PlasmicNewProjectModal;
/* prettier-ignore-end */
