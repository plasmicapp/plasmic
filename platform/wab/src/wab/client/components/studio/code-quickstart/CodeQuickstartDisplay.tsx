// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import { useAppCtx } from "@/wab/client/contexts/AppContexts";
import {
  DefaultCodeQuickstartDisplayProps,
  PlasmicCodeQuickstartDisplay,
} from "@/wab/client/plasmic/plasmic_kit_code_display_and_onboarding/PlasmicCodeQuickstartDisplay";
import { ApiProject } from "@/wab/shared/ApiSchema";
import { tuple } from "@/wab/shared/common";
import { HTMLElementRefOf } from "@plasmicapp/react-web";
import * as React from "react";
import { useState } from "react";

interface CodeQuickstartDisplayProps extends DefaultCodeQuickstartDisplayProps {
  project: ApiProject;
  noComponents: boolean;
  subjectComponentInfo:
    | {
        pathOrComponent: string;
        componentName: string;
      }
    | undefined;
}

function CodeQuickstartDisplay_(
  {
    project,
    noComponents,
    subjectComponentInfo,
    ...props
  }: CodeQuickstartDisplayProps,
  ref: HTMLElementRefOf<"div">
) {
  const appCtx = useAppCtx();
  const [shown, setShown] = useState("nextjs");

  function tokenStr() {
    if (!project.projectApiToken) {
      return "null";
    }
    return project.projectApiToken;
  }

  const frameworks = [
    "react",
    "nextjs",
    "gatsby",
    "hydrogen",
    "remix",
    "tanstack",
    "js",
    "php",
    "rest",
    "graphql",
  ];

  const frameworkTabs = Object.fromEntries(
    frameworks.map((f) =>
      tuple(f, {
        onClick: () => setShown(f),
        active: shown === f,
        style: appCtx.appConfig.hiddenQuickstartPlatforms.includes(f)
          ? { display: "none" }
          : {},
      })
    )
  );

  const params = new URLSearchParams({
    projectId: project.id,
    noComponents: String(noComponents),
    apiToken: tokenStr(),
    ...(subjectComponentInfo ?? {}),
  });

  return (
    <PlasmicCodeQuickstartDisplay
      root={{ ref }}
      {...props}
      frameworkTabs={{ ...frameworkTabs }}
      iframeContainer={{
        wrapChildren: () => (
          <iframe
            className={"CodegenPanel"}
            src={`${
              appCtx.appConfig.appContentBaseUrl
            }/${shown}#${params.toString()}`}
          />
        ),
      }}
    />
  );
}

const CodeQuickstartDisplay = React.forwardRef(CodeQuickstartDisplay_);
export default CodeQuickstartDisplay;
