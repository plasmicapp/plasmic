# --- Build stage ---
FROM node:18-alpine AS builder

ENV PLASMIC_HOME=/plasmic \
    HOME=/home/plasmic \
    NODE_ENV=development \
    PYTHON=/usr/bin/python3

WORKDIR $PLASMIC_HOME

# Install system deps
RUN apk add --no-cache \
    bash \
    curl \
    git \
    wget \
    python3 \
    py3-pip \
    build-base

# Copy only dependency files first for caching
COPY package.json yarn.lock ./

# Install deps early for cache
RUN yarn install --frozen-lockfile --prefer-offline

# Then copy rest of the app
COPY . .

# Secrets setup and build tools
RUN yarn setup && \
    yarn setup:canvas-packages && \
    cd platform/wab && \
    yarn build-css && \
    yarn build && \
    yarn cache clean

# --- Final stage ----------------------------------------------------------------------
FROM nginx:stable-alpine

RUN <<EOF > /etc/nginx/conf.d/default.conf
server {
    listen 3003;
    server_name localhost;

    location / {
        root /usr/share/nginx/html;
        index index.html;
        # NOTE : Les '$' doivent être échappés (\$) pour ne pas être interprétés par le shell.
        try_files \$uri \$uri/ /index.html;
    }
}
EOF

# Copy built app and secrets with correct ownership
COPY --from=builder /plasmic/platform/wab/build /usr/share/nginx/html

EXPOSE 3003
